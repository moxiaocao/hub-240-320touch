//添加按键组
	lv_group_t *g = lv_group_create();
	
	lv_group_add_obj(g,ui->DATA_btn_1);
	lv_group_add_obj(g,ui->DATA_btn_2);
	lv_group_add_obj(g,ui->DATA_btn_3);
	lv_group_add_obj(g,ui->DATA_btn_4);
	lv_group_add_obj(g,ui->DATA_MCU);
	lv_group_add_obj(g,ui->DATA_btn_5);
	lv_indev_set_group(indev_keypad,g);

//头文件引用

#include "..\..\src\custom\custom.h"
#include "..\..\src\generated\gui_guider.h"
#include "..\lvgl/lvgl.h"

//
extern Usb usba;

static void DATA_btn_1_event_handler (lv_event_t *e)
{
	lv_event_code_t code = lv_event_get_code(e);


	switch (code) {
	case LV_EVENT_VALUE_CHANGED:
	{
        
        if(usba.usb_pin_state[0] == usb_on){
            Usb_Control_Set(usb1, usb_off,&usba);
        }
        else  Usb_Control_Set(usb1, usb_on,&usba);
        
		break;
	}
	default:
		break;
	}
}
void events_init(lv_ui *ui)
{
	
	lv_obj_add_event_cb(ui->DATA_btn_1, DATA_btn_1_event_handler, LV_EVENT_VALUE_CHANGED, ui);
}



	lv_group_t *group_2 = lv_group_create();
	lv_group_add_obj(group_2,ui->data_btn_1);
	lv_group_add_obj(group_2,ui->data_btn_2);
	lv_group_add_obj(group_2,ui->data_btn_3);
	lv_group_add_obj(group_2,ui->data_imgbtn_1);
	lv_indev_set_group(indev_keypad,group_2);	


	lv_group_t *group_3 = lv_group_create();
	lv_group_add_obj(group_3,ui->guanyu_btn_1);
	lv_indev_set_group(indev_keypad,group_3);	

	lv_group_t *group_4 = lv_group_create();
	lv_group_add_obj(group_4,ui->home_imgbtn_1);
	lv_indev_set_group(indev_keypad,group_4);


	lv_group_t *group_1 = lv_group_create();
	lv_group_add_obj(group_1,ui->control_btn_1);
	lv_group_add_obj(group_1,ui->control_list_1);
	lv_indev_set_group(indev_keypad,group_1);	